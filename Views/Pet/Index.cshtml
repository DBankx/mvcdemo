@model List<Pet>

<h2>All pets from database</h2>
@if(Model.Count<=0){
    <p>Fetching data..</p>
} else {

<form asp-action="Index" method="POST">
    <div class="row input-group">
        <input type = "text" name = "search" id="search" class="form-control"/>
        <div class="input-group-btn">
            <input type = "submit" class="btn btn-primary" value="Search"/>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <td>Id</td>
            <td>Name</td>
            <td>Age</td>
            <td>Color</td>
            <td>Selling Status</td>
        </tr>
    </thead>
    <tbody>
        @foreach(var pet in Model){
            <tr>
                <td>@pet.Id</td>
                <td><a asp-action="Details" asp-controller="Pet" asp-route-id="@pet.Id">@pet.Name</a></td>
                <td>@pet.Age</td>
                <td>@pet.Color</td>
                <td>@(pet.IsSelling? "Selling":"Not Selling")</td>
            </tr>
        }
    </tbody>
</table>
}
@section Scripts{
    <script>
    var options = {

        url: function(search) {
            return "/Pet/AutocompleteResult";
        },

        getValue: function(element) {
            return element.name;
        },

        template: {
        type: "description",
        fields: {
            description: "color"
        }
        },

        list: {
            match: {
                enabled: false
            },
            sort: {
                enabled: true
            }
        },

        ajaxSettings: {
            dataType: "json",
            method: "POST",
            data: {
            dataType: "json"
            }
        },

        preparePostData: function(data) {
            data.search = $("#search").val();
            return data;
        },

        requestDelay: 400
    };

        $("#search").easyAutocomplete(options);
    </script>
}